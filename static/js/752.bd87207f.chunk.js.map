{"version":3,"file":"static/js/752.bd87207f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsEditorForm/ContactsEditorForm.styled.js","components/commonStyles/Input.styled.js","components/ContactsEditorForm/ContactsEditorForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactsList/ContactsList.js","pages/ContactsPage.js"],"sourcesContent":["export const selectContacts = state => state.contacts;\r\nexport const selectFilter = state => state.filter;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\n// export const selectError = state => state.contacts.error;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: ${props => props.theme.sizes.xxl};\r\n  margin-bottom: ${props => props.theme.space[8]}px;\r\n  border-radius: ${props => props.theme.radii.sm};\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  cursor: pointer;\r\n  font-size: ${props => props.theme.fontSizes[4]}px;\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  width: ${props => props.theme.sizes.l};\r\n  cursor: pointer;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: ${props => props.theme.space[4]}px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: ${props => props.theme.fontSizes[4]}px;\r\n  background-color: ${props => props.theme.colors.fill};\r\n\r\n  border: ${props => props.theme.borders.medium};\r\n  border-color: ${props => props.theme.colors.accent};\r\n  border-radius: ${props => props.theme.radii.sm};\r\n\r\n  -webkit-transition-duration: 0.4s;\r\n  transition-duration: 0.4s;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.backgroundAccent};\r\n  }\r\n`;\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Input = styled.input`\r\n  width: ${props => props.theme.sizes.xl};\r\n  margin-bottom: ${props => props.theme.space[5]}px;\r\n  padding: ${props => props.theme.space[4]}px;\r\n  border: ${props => props.theme.borders.medium};\r\n  border-color: ${props => props.theme.colors.primary};\r\n  outline: 0;\r\n  border-radius: ${props => props.theme.radii.sm};\r\n  font-size: ${props => props.theme.fontSizes[3]}px;\r\n\r\n  transition: 0.3s all linear;\r\n  \r\n  &:hover {\r\n    border-color: ${props => props.theme.colors.accent};\r\n    background-color: ${props => props.theme.colors.backgroundHover};\r\n  }\r\n`","import { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/operations';\r\nimport { selectContacts } from '../../redux/contacts/selectors';\r\nimport { Form, Label, SubmitButton } from './ContactsEditorForm.styled';\r\nimport { Input } from '../commonStyles/Input.styled';\r\n\r\nexport const ContactsEditorForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { items } = useSelector(selectContacts);\r\n  const namesArray = items.map(contact => contact.name);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n\r\n    if (namesArray.find(myContact => myContact === name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact({ name, number }));\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Name Surname\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </Label>\r\n\r\n        <Label>\r\n          Phone number\r\n          <Input\r\n            type=\"tel\"\r\n            id=\"number\"\r\n            name=\"number\"\r\n            placeholder=\"+38 000 00 00\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </Label>\r\n\r\n        <SubmitButton type=\"submit\">Save contact</SubmitButton>\r\n      </Form>\r\n    </section>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { findContact } from '../../redux/contacts/filterSlice';\r\n\r\nimport { Input } from '../commonStyles/Input.styled';\r\n\r\nexport const Filter = () => {\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onUpdateFilter = e => dispatch(findContact(e.currentTarget.value));\r\n\r\n  return (\r\n    <Input\r\n      value={filter}\r\n      name=\"filter\"\r\n      type=\"text\"\r\n      placeholder=\"Find contact\"\r\n      onChange={onUpdateFilter}\r\n    />\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  overflow: hidden;\r\n\r\n  max-width: ${props => props.theme.sizes.xl};\r\n  margin-bottom: ${props => props.theme.space[5]}px;\r\n  padding: ${props => props.theme.space[3]}px;\r\n  border-radius: ${props => props.theme.radii.sm};\r\n  border-left: ${props => props.theme.borders.decorBold};\r\n  border-right: ${props => props.theme.borders.decorBold};\r\n  border-color: ${props => props.theme.colors.backgroundAccent};\r\n\r\n  box-shadow: ${props => props.theme.shadows.box};\r\n  font-size: ${props => props.theme.fontSizes[3]}px;\r\n\r\n  transition: 0.3s all linear;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.backgroundHover};\r\n  }\r\n`;\r\n\r\nexport const DeleteButton = styled.button`\r\n  cursor: pointer;\r\n  color: ${props => props.theme.colors.warning};\r\n  background-color: ${props => props.theme.colors.fill};\r\n\r\n  border-radius: ${props => props.theme.radii.sm};\r\n  border-color: ${props => props.theme.colors.warning};\r\n\r\n  &:hover {\r\n    box-shadow: ${props => props.theme.shadows.box};\r\n  }\r\n`;\r\n","import { useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/operations';\r\nimport { ListItem, DeleteButton } from './ContactListItem.styled';\r\n\r\nexport const ContactListItem = ({ contact }) => {\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => dispatch(deleteContact(contact.id));\r\n\r\n  return (\r\n    <ListItem>\r\n      <p>\r\n        {contact.name} : {contact.number}\r\n      </p>\r\n      <DeleteButton type=\"button\" onClick={handleDelete}>\r\n        Delete\r\n      </DeleteButton>\r\n    </ListItem>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContacts } from '../../redux/contacts/operations';\r\nimport { selectContacts, selectFilter } from '../../redux/contacts/selectors';\r\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\r\n\r\nexport const ContactsList = () => {\r\n  const dispatch = useDispatch();\r\n  const { items, isLoading, error } = useSelector(selectContacts);\r\n  const filter = useSelector(selectFilter);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const getFilteredContacts = () => {\r\n    if (filter) {\r\n      return items.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase())\r\n      );\r\n    }\r\n    return items;\r\n  };\r\n\r\n  const filteredContacts = getFilteredContacts();\r\n  const totalContacts = items.length;\r\n  const shownContacts = filteredContacts.length;\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <b>Loading contacts...</b>}\r\n      {error && <b>{error.message}</b>}\r\n\r\n      <section>\r\n        <h2>Contacts</h2>\r\n\r\n        <ul>\r\n          {filteredContacts\r\n            ? filteredContacts.map(contact => {\r\n                return (\r\n                  <ContactListItem\r\n                    key={contact.id}\r\n                    contact={contact}\r\n                    id={contact.id}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n        </ul>\r\n\r\n        <div>\r\n          <p>\r\n            Total contacts:\r\n            {totalContacts}\r\n          </p>\r\n          <p>\r\n            Contacts shown:\r\n            {shownContacts}\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ContactsEditorForm } from '../components/ContactsEditorForm/ContactsEditorForm';\r\nimport { Filter } from '../components/Filter/Filter';\r\nimport { ContactsList } from '../components/ContactsList/ContactsList';\r\n\r\nimport { fetchContacts } from '../redux/contacts/operations';\r\nimport { selectIsLoading } from '../redux/contacts/selectors';\r\n\r\nconst ContactsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div>{isLoading && 'Request in progress...'}</div>\r\n      <ContactsEditorForm />\r\n      <Filter />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","Form","styled","props","theme","sizes","xxl","space","radii","sm","Label","fontSizes","SubmitButton","l","colors","fill","borders","medium","accent","backgroundAccent","Input","xl","primary","backgroundHover","ContactsEditorForm","dispatch","useDispatch","namesArray","useSelector","items","map","contact","name","onSubmit","event","preventDefault","form","currentTarget","elements","value","number","find","myContact","alert","addContact","reset","type","id","placeholder","pattern","title","required","Filter","onChange","e","findContact","ListItem","decorBold","shadows","box","DeleteButton","warning","ContactListItem","onClick","deleteContact","ContactsList","error","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","totalContacts","length","shownContacts","message"],"sourceRoot":""}